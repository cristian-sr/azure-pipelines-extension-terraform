{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        // Terraform init
        {
            "type": "node",
            "request": "launch",
            "name": "Terraform Init - Azure",
            "envFile": "${workspaceFolder}/Tasks/Terraform/.env",
            "env": {
                "INPUT_command": "init",
                "INPUT_cwd": "./tests/test-template-azure",
                "INPUT_backend": "Azure",
                "INPUT_backendAzureProviderStorageAccountName": "mtcdenterraformsandbox",
                "INPUT_providerAzureConnectedServiceName": "AzureProviderConnection",
                "INPUT_backendAzureUseProviderConnectedServiceForBackend": "true"
            },
            "program": "${workspaceFolder}/Tasks/Terraform/src/Index.ts",
            "preLaunchTask": "Compile Terraform",
            "internalConsoleOptions": "openOnSessionStart",
            "sourceMaps": true,
            "outputCapture": "std",
            "outFiles": [
                "${workspaceFolder}/Tasks/Terraform/.bin/**/*.js"
            ]
        },

        {
            "type": "node",
            "request": "launch",
            "name": "Terraform Plan - Azure",
            "envFile": "${workspaceFolder}/Tasks/Terraform/.env",
            "env": {
                "INPUT_command": "plan",
                "INPUT_cwd": "./tests/test-template-azure",
                "INPUT_backend": "Azure",
                "INPUT_backendAzureProviderStorageAccountName": "mtcdenterraformsandbox",
                "INPUT_providerAzureConnectedServiceName": "AzureProviderConnection",
                "INPUT_backendAzureUseProviderConnectedServiceForBackend": "true",
                "INPUT_outputFile": "output.plan",
                "INPUT_variables": "{\"environment\": \"dev\"}"
            },
            "program": "${workspaceFolder}/Tasks/Terraform/src/Index.ts",
            "preLaunchTask": "Compile Terraform",
            "internalConsoleOptions": "openOnSessionStart",
            "sourceMaps": true,
            "outputCapture": "std",
            "outFiles": [
                "${workspaceFolder}/Tasks/Terraform/.bin/**/*.js"
            ]
        },

        {
            "type": "node",
            "request": "launch",
            "name": "Terraform Apply - Azure",
            "envFile": "${workspaceFolder}/Tasks/Terraform/.env",
            "env": {
                "INPUT_command": "apply",
                "INPUT_cwd": "./tests/test-template-azure",
                "INPUT_backend": "Azure",
                "INPUT_backendAzureProviderStorageAccountName": "mtcdenterraformsandbox",
                "INPUT_providerAzureConnectedServiceName": "AzureProviderConnection",
                "INPUT_backendAzureUseProviderConnectedServiceForBackend": "true",
                "INPUT_planFile": "output.plan"
            },
            "program": "${workspaceFolder}/Tasks/Terraform/src/Index.ts",
            "preLaunchTask": "Compile Terraform",
            "internalConsoleOptions": "openOnSessionStart",
            "sourceMaps": true,
            "outputCapture": "std",
            "outFiles": [
                "${workspaceFolder}/Tasks/Terraform/.bin/**/*.js"
            ]
        },

        // Terraform CLI
        {
            "type": "node",
            "request": "launch",
            "name": "Terraform CLI - Azure",
            "envFile": "${workspaceFolder}/Tasks/Terraform/.env",
            "env": {
                "INPUT_command": "CLI",
                "INPUT_script": "terraform init \n terraform plan",
                "INPUT_cwd": "./tests/test-template-azure",
                "INPUT_provider": "Azure",
                "INPUT_backend": "Azure",
                "INPUT_backendAzureProviderStorageAccountName": "mtcdenterraformsandbox",
                "INPUT_providerAzureConnectedServiceName": "AzureProviderConnection",
                "INPUT_backendAzureUseProviderConnectedServiceForBackend": "true"
            },
            "program": "${workspaceFolder}/Tasks/Terraform/src/Index.ts",
            "preLaunchTask": "Compile Terraform",
            "internalConsoleOptions": "openOnSessionStart",
            "sourceMaps": true,
            "outputCapture": "std",
            "outFiles": [
                "${workspaceFolder}/Tasks/Terraform/.bin/**/*.js"
            ]
        },

        // Terraform Init Remote Backend 
        {
            "type": "node",
            "request": "launch",
            "name": "Terraform Init - Remote",
            "envFile": "${workspaceFolder}/Tasks/Terraform/.env",
            "env": {
                "INPUT_command": "init",
                "INPUT_cwd": "./tests/test-template-remote",
                "INPUT_backend": "Remote",
                "INPUT_provider": "Remote"
            },
            "program": "${workspaceFolder}/Tasks/Terraform/src/Index.ts",
            "preLaunchTask": "Compile Terraform",
            "internalConsoleOptions": "openOnSessionStart",
            "sourceMaps": true,
            "outputCapture": "std",
            "outFiles": [
                "${workspaceFolder}/Tasks/Terraform/.bin/**/*.js"
            ]
        },

        // Terraform Installer
        {
            "type": "node",
            "request": "launch",
            "name": "TerraformInstaller",
            "envFile": "${workspaceFolder}/Tasks/TerraformInstaller/.env",
            "program": "${workspaceFolder}/Tasks/TerraformInstaller/src/Index.ts",
            "preLaunchTask": "Compile TerraformInstaller",
            "internalConsoleOptions": "openOnSessionStart",
            "sourceMaps": true,
            //"smartStep": false,
            "outputCapture": "std",
            "outFiles": [
                "${workspaceFolder}/Tasks/TerraformInstaller/.bin/**/*.js"
            ]
        }
    ]
}

